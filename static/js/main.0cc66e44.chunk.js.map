{"version":3,"sources":["ContactSection/index.js","ContactSection/propTypes.js","ContactSection/styles.js","HeroSection/index.js","HeroSection/propTypes.js","HeroSection/styles.js","ServicesSection/BobcatHireCard/index.js","ServicesSection/BobcatHireCard/propTypes.js","ServicesSection/BobcatHireCard/styles.js","ServicesSection/CleanupCard/index.js","ServicesSection/CleanupCard/propTypes.js","ServicesSection/CleanupCard/styles.js","ServicesSection/RemovalCard/index.js","ServicesSection/RemovalCard/propTypes.js","ServicesSection/RemovalCard/styles.js","ServicesSection/index.js","ServicesSection/propTypes.js","ServicesSection/styles.js","App/index.js","App/propTypes.js","App/styles.js","serviceWorker.js","index.js","ServicesSection/BobcatHireCard/image.jpg","ServicesSection/CleanupCard/image.jpg","ServicesSection/RemovalCard/image.jpg"],"names":["ContactSection","PropTypes","isRequired","_ref","classes","react_default","a","createElement","className","root","Typography_default","variant","color","defaultProps","withStyles","theme","flexGrow","HeroSection","BobcatHireCard","Card_default","card","CardActionArea_default","CardMedia_default","component","alt","media","height","image","title","CardContent_default","gutterBottom","maxWidth","objectFit","CleanupCard","RemovalCard","ServicesSection","ServicesSection_CleanupCard","ServicesSection_RemovalCard","ServicesSection_BobcatHireCard","App","Fragment","CssBaseline_default","src_HeroSection","src_ServicesSection","src_ContactSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0cc66e44.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport propTypes, { defaultProps } from './propTypes';\r\nimport styles from './styles';\r\n\r\nconst ContactSection = ({ classes }) => (\r\n  <div className={classes.root}>\r\n    <Typography variant=\"h6\" color=\"inherit\">\r\n      Contact Section\r\n    </Typography>\r\n  </div>\r\n);\r\n\r\nContactSection.propTypes = propTypes;\r\nContactSection.defaultProps = defaultProps;\r\n\r\nexport default withStyles(styles)(ContactSection);\r\n","import * as PropTypes from 'prop-types';\r\n\r\nexport const defaultProps = {\r\n};\r\n\r\nexport default {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n","export default theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport propTypes, { defaultProps } from './propTypes';\r\nimport styles from './styles';\r\n\r\nconst HeroSection = ({ classes }) => (\r\n  <div className={classes.root}>\r\n    <Typography variant=\"h6\" color=\"inherit\">\r\n      Hero Section\r\n    </Typography>\r\n  </div>\r\n);\r\n\r\nHeroSection.propTypes = propTypes;\r\nHeroSection.defaultProps = defaultProps;\r\n\r\nexport default withStyles(styles)(HeroSection);\r\n","import * as PropTypes from 'prop-types';\r\n\r\nexport const defaultProps = {\r\n};\r\n\r\nexport default {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n","export default theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport image from './image.jpg'\r\nimport propTypes, { defaultProps } from './propTypes';\r\nimport styles from './styles';\r\n\r\nconst BobcatHireCard = ({ classes }) => (\r\n  <Card className={classes.card}>\r\n    <CardActionArea>\r\n      <CardMedia\r\n        component=\"img\"\r\n        alt=\"Contemplative Reptile\"\r\n        className={classes.media}\r\n        height=\"140\"\r\n        image={image}\r\n        title=\"Contemplative Reptile\"\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          Bobcat Hire\r\n        </Typography>\r\n        <Typography component=\"p\">\r\n          Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n          across all continents except Antarctica\r\n        </Typography>\r\n      </CardContent>\r\n    </CardActionArea>\r\n  </Card>\r\n);\r\n\r\nBobcatHireCard.propTypes = propTypes;\r\nBobcatHireCard.defaultProps = defaultProps;\r\n\r\nexport default withStyles(styles)(BobcatHireCard);\r\n","import * as PropTypes from 'prop-types';\r\n\r\nexport const defaultProps = {\r\n};\r\n\r\nexport default {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n","export default theme => ({\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    // object-fit is not supported by IE 11.\r\n    objectFit: 'cover',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport image from './image.jpg'\r\nimport propTypes, { defaultProps } from './propTypes';\r\nimport styles from './styles';\r\n\r\nconst CleanupCard = ({ classes }) => (\r\n  <Card className={classes.card}>\r\n    <CardActionArea>\r\n      <CardMedia\r\n        component=\"img\"\r\n        alt=\"Contemplative Reptile\"\r\n        className={classes.media}\r\n        height=\"140\"\r\n        image={image}\r\n        title=\"Contemplative Reptile\"\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          Clean Up\r\n        </Typography>\r\n        <Typography component=\"p\">\r\n          Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n          across all continents except Antarctica\r\n        </Typography>\r\n      </CardContent>\r\n    </CardActionArea>\r\n  </Card>\r\n);\r\n\r\nCleanupCard.propTypes = propTypes;\r\nCleanupCard.defaultProps = defaultProps;\r\n\r\nexport default withStyles(styles)(CleanupCard);\r\n","import * as PropTypes from 'prop-types';\r\n\r\nexport const defaultProps = {\r\n};\r\n\r\nexport default {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n","export default theme => ({\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    // object-fit is not supported by IE 11.\r\n    objectFit: 'cover',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport image from './image.jpg'\r\nimport propTypes, { defaultProps } from './propTypes';\r\nimport styles from './styles';\r\n\r\nconst RemovalCard = ({ classes }) => (\r\n  <Card className={classes.card}>\r\n    <CardActionArea>\r\n      <CardMedia\r\n        component=\"img\"\r\n        alt=\"Contemplative Reptile\"\r\n        className={classes.media}\r\n        height=\"140\"\r\n        image={image}\r\n        title=\"Contemplative Reptile\"\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          Removal\r\n        </Typography>\r\n        <Typography component=\"p\">\r\n          Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n          across all continents except Antarctica\r\n        </Typography>\r\n      </CardContent>\r\n    </CardActionArea>\r\n  </Card>\r\n);\r\n\r\nRemovalCard.propTypes = propTypes;\r\nRemovalCard.defaultProps = defaultProps;\r\n\r\nexport default withStyles(styles)(RemovalCard);\r\n","import * as PropTypes from 'prop-types';\r\n\r\nexport const defaultProps = {\r\n};\r\n\r\nexport default {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n","export default theme => ({\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    // object-fit is not supported by IE 11.\r\n    objectFit: 'cover',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport BobcatHireCard from './BobcatHireCard';\r\nimport CleanupCard from './CleanupCard';\r\nimport RemovalCard from './RemovalCard';\r\n\r\nimport propTypes, { defaultProps } from './propTypes';\r\nimport styles from './styles';\r\n\r\nconst ServicesSection = ({ classes }) => (\r\n  <div className={classes.root}>\r\n    <Typography variant=\"h6\" color=\"inherit\">\r\n      Services Section\r\n    </Typography>\r\n    <CleanupCard />\r\n    <RemovalCard />\r\n    <BobcatHireCard />\r\n  </div>\r\n);\r\n\r\nServicesSection.propTypes = propTypes;\r\nServicesSection.defaultProps = defaultProps;\r\n\r\nexport default withStyles(styles)(ServicesSection);\r\n","import * as PropTypes from 'prop-types';\r\n\r\nexport const defaultProps = {\r\n};\r\n\r\nexport default {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n","export default theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport ContactSection from '../ContactSection';\r\nimport HeroSection from '../HeroSection';\r\nimport ServicesSection from '../ServicesSection';\r\n\r\nimport propTypes, { defaultProps } from './propTypes';\r\nimport styles from './styles';\r\n\r\nconst App = ({ classes }) => (\r\n  <React.Fragment>\r\n    <CssBaseline />\r\n    <div className={classes.root}>\r\n      <HeroSection />\r\n      <ServicesSection />\r\n      <ContactSection />\r\n    </div>\r\n  </React.Fragment>\r\n);\r\n\r\nApp.propTypes = propTypes;\r\nApp.defaultProps = defaultProps;\r\n\r\nexport default withStyles(styles)(App);\r\n","import * as PropTypes from 'prop-types';\r\n\r\nexport const defaultProps = {\r\n};\r\n\r\nexport default {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n","export default theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/image.34dfeed2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image.34dfeed2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image.34dfeed2.jpg\";"],"sourceRoot":""}